// <auto-generated />
using System;
using DoAnTotNghiep.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoAnTotNghiep.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoAnTotNghiep.Data.AttendanceDB", b =>
                {
                    b.Property<Guid>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PracticeScheduleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttendanceID");

                    b.HasIndex("PracticeScheduleID");

                    b.HasIndex("StudentID");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.BuildingDB", b =>
                {
                    b.Property<Guid>("BuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseBuilding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingID");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.Class", b =>
                {
                    b.Property<Guid>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CourseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MajorsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MajorsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassID");

                    b.HasIndex("CourseID");

                    b.HasIndex("MajorsID");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.CourseDB", b =>
                {
                    b.Property<Guid>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.DetailmoduleclassDB", b =>
                {
                    b.Property<Guid>("DetailModuleClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("FrequentPoints1")
                        .HasColumnType("real");

                    b.Property<float?>("FrequentPoints2")
                        .HasColumnType("real");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MediumScore")
                        .HasColumnType("real");

                    b.Property<string>("ModuleClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModuleClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DetailModuleClassID");

                    b.HasIndex("ModuleClassID");

                    b.HasIndex("StudentID");

                    b.ToTable("DetailModuleClass");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.DetailpracticegroupDB", b =>
                {
                    b.Property<Guid>("DetailPracticeGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticeGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PracticeGroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PracticeGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DetailPracticeGroupID");

                    b.HasIndex("PracticeGroupID");

                    b.HasIndex("StudentID");

                    b.ToTable("DetailPracticeGroup");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.EquipmentDB", b =>
                {
                    b.Property<Guid>("EquipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("PracticalLaboratoryID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EquipmentID");

                    b.HasIndex("PracticalLaboratoryID");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.MaintainanceDB", b =>
                {
                    b.Property<Guid>("MaintainanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaintainanceStatus")
                        .HasColumnType("int");

                    b.Property<string>("PracticalLaboratoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PracticalLaboratoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PracticalLaboratoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Request")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TechnicalStaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TechnicalStaffID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaintainanceID");

                    b.HasIndex("PracticalLaboratoryID");

                    b.HasIndex("TechnicalStaffID");

                    b.ToTable("Maintainance");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.ModuleclassDB", b =>
                {
                    b.Property<Guid>("ModuleClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModuleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfModule")
                        .HasColumnType("int");

                    b.Property<Guid>("SchoolYearID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchoolYearName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SemesterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SemesterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Status")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeacherID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ModuleClassID");

                    b.HasIndex("SchoolYearID");

                    b.HasIndex("TeacherID");

                    b.ToTable("ModuleClass");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.OlogyDB", b =>
                {
                    b.Property<Guid>("OlogyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OlogyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OlogyID");

                    b.ToTable("Ology");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PermissionDB", b =>
                {
                    b.Property<Guid>("PermissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionID");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticallaboratoryDB", b =>
                {
                    b.Property<Guid>("PracticalLaboratoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<Guid?>("OlogyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OlogyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticalLaboratoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticalLaboratoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubjectID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PracticalLaboratoryID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("OlogyID");

                    b.HasIndex("SubjectID");

                    b.ToTable("PracticalLaboratory");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticeScheduleDB", b =>
                {
                    b.Property<Guid>("PracticeScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PracticalLaboratoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PracticalLaboratoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PracticeGroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PracticeGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PracticeShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PracticeShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Request")
                        .HasColumnType("int");

                    b.Property<Guid?>("SchoolYearID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchoolYearName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SemesterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SemesterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeacherID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PracticeScheduleID");

                    b.HasIndex("PracticalLaboratoryID");

                    b.HasIndex("PracticeGroupID");

                    b.HasIndex("PracticeShiftID");

                    b.HasIndex("SchoolYearID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("TeacherID");

                    b.ToTable("PracticeSchedule");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticeShiftDB", b =>
                {
                    b.Property<Guid>("PracticeShiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PracticeShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PracticeShiftID");

                    b.ToTable("PracticeShift");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.SchoolYearDB", b =>
                {
                    b.Property<Guid>("SchoolYearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchoolYearName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SchoolYearID");

                    b.ToTable("SchoolYear");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.SemesterDB", b =>
                {
                    b.Property<Guid>("SemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SemesterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterID");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.StudentDB", b =>
                {
                    b.Property<Guid>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("StudentCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("ClassID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.SubjectDB", b =>
                {
                    b.Property<Guid>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectID");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.TeacherDB", b =>
                {
                    b.Property<Guid>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubjectID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherID");

                    b.HasIndex("SubjectID");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.TechnicalStaffDB", b =>
                {
                    b.Property<Guid>("TechnicalStaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalStaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicalStaffID");

                    b.ToTable("TechnicalStaff");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PermissionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("PermissionID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.majorsDB", b =>
                {
                    b.Property<Guid>("MajorsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MajorsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OlogyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OlogyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorsID");

                    b.HasIndex("OlogyID");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.moduleDB", b =>
                {
                    b.Property<Guid>("ModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("BigExercise")
                        .HasColumnType("real");

                    b.Property<string>("ModuleClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("NumberOfModule")
                        .HasColumnType("real");

                    b.Property<float?>("Practice")
                        .HasColumnType("real");

                    b.Property<Guid?>("SubjectID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Theory")
                        .HasColumnType("real");

                    b.HasKey("ModuleID");

                    b.HasIndex("SubjectID");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.practicegroupDB", b =>
                {
                    b.Property<Guid>("PracticeGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModuleClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticeGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticeGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeacherID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PracticeGroupID");

                    b.HasIndex("ModuleClassID");

                    b.HasIndex("TeacherID");

                    b.ToTable("PracticeGroup");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.AttendanceDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.PracticeScheduleDB", "PracticeSchedule")
                        .WithMany("Attendances")
                        .HasForeignKey("PracticeScheduleID");

                    b.HasOne("DoAnTotNghiep.Data.StudentDB", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentID");

                    b.Navigation("PracticeSchedule");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.Class", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.CourseDB", "Course")
                        .WithMany("Classs")
                        .HasForeignKey("CourseID");

                    b.HasOne("DoAnTotNghiep.Data.majorsDB", "Majors")
                        .WithMany("Classs")
                        .HasForeignKey("MajorsID");

                    b.Navigation("Course");

                    b.Navigation("Majors");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.DetailmoduleclassDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.ModuleclassDB", "ModuleClass")
                        .WithMany("DetailModuleClasss")
                        .HasForeignKey("ModuleClassID");

                    b.HasOne("DoAnTotNghiep.Data.StudentDB", "Student")
                        .WithMany("DetailModuleClasss")
                        .HasForeignKey("StudentID");

                    b.Navigation("ModuleClass");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.DetailpracticegroupDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.practicegroupDB", "PracticeGroup")
                        .WithMany("DetailPracticeGroups")
                        .HasForeignKey("PracticeGroupID");

                    b.HasOne("DoAnTotNghiep.Data.StudentDB", "Student")
                        .WithMany("DetailPracticeGroups")
                        .HasForeignKey("StudentID");

                    b.Navigation("PracticeGroup");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.EquipmentDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.PracticallaboratoryDB", "PracticalLaboratory")
                        .WithMany("Equipments")
                        .HasForeignKey("PracticalLaboratoryID");

                    b.Navigation("PracticalLaboratory");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.MaintainanceDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.PracticallaboratoryDB", "PracticalLaboratory")
                        .WithMany("Maintainances")
                        .HasForeignKey("PracticalLaboratoryID");

                    b.HasOne("DoAnTotNghiep.Data.TechnicalStaffDB", "TechnicalStaff")
                        .WithMany("Maintainances")
                        .HasForeignKey("TechnicalStaffID");

                    b.Navigation("PracticalLaboratory");

                    b.Navigation("TechnicalStaff");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.ModuleclassDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.SchoolYearDB", "SchoolYear")
                        .WithMany("ModuleClasss")
                        .HasForeignKey("SchoolYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnTotNghiep.Data.TeacherDB", "Teacher")
                        .WithMany("ModuleClasss")
                        .HasForeignKey("TeacherID");

                    b.Navigation("SchoolYear");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticallaboratoryDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.BuildingDB", "Building")
                        .WithMany("PracticalLaboratorys")
                        .HasForeignKey("BuildingID");

                    b.HasOne("DoAnTotNghiep.Data.OlogyDB", "Ology")
                        .WithMany("PracticalLaboratorys")
                        .HasForeignKey("OlogyID");

                    b.HasOne("DoAnTotNghiep.Data.SubjectDB", "Subject")
                        .WithMany("PracticalLaboratorys")
                        .HasForeignKey("SubjectID");

                    b.Navigation("Building");

                    b.Navigation("Ology");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticeScheduleDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.PracticallaboratoryDB", "PracticalLaboratory")
                        .WithMany("PracticeSchedules")
                        .HasForeignKey("PracticalLaboratoryID");

                    b.HasOne("DoAnTotNghiep.Data.practicegroupDB", "PracticeGroup")
                        .WithMany("PracticeSchedules")
                        .HasForeignKey("PracticeGroupID");

                    b.HasOne("DoAnTotNghiep.Data.PracticeShiftDB", "PracticeShift")
                        .WithMany("PracticeSchedules")
                        .HasForeignKey("PracticeShiftID");

                    b.HasOne("DoAnTotNghiep.Data.SchoolYearDB", "SchoolYear")
                        .WithMany("PracticeSchedules")
                        .HasForeignKey("SchoolYearID");

                    b.HasOne("DoAnTotNghiep.Data.SemesterDB", "Semester")
                        .WithMany("PracticeSchedules")
                        .HasForeignKey("SemesterID");

                    b.HasOne("DoAnTotNghiep.Data.TeacherDB", "Teacher")
                        .WithMany("PracticeSchedules")
                        .HasForeignKey("TeacherID");

                    b.Navigation("PracticalLaboratory");

                    b.Navigation("PracticeGroup");

                    b.Navigation("PracticeShift");

                    b.Navigation("SchoolYear");

                    b.Navigation("Semester");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.StudentDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassID");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.TeacherDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.SubjectDB", "Subject")
                        .WithMany("Teachers")
                        .HasForeignKey("SubjectID");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.User", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.PermissionDB", "Permission")
                        .WithMany("Users")
                        .HasForeignKey("PermissionID");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.majorsDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.OlogyDB", "Ology")
                        .WithMany("Majors")
                        .HasForeignKey("OlogyID");

                    b.Navigation("Ology");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.moduleDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.SubjectDB", "Subject")
                        .WithMany("Modules")
                        .HasForeignKey("SubjectID");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.practicegroupDB", b =>
                {
                    b.HasOne("DoAnTotNghiep.Data.ModuleclassDB", "ModuleClass")
                        .WithMany("PracticeGroups")
                        .HasForeignKey("ModuleClassID");

                    b.HasOne("DoAnTotNghiep.Data.TeacherDB", "Teacher")
                        .WithMany("PracticeGroups")
                        .HasForeignKey("TeacherID");

                    b.Navigation("ModuleClass");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.BuildingDB", b =>
                {
                    b.Navigation("PracticalLaboratorys");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.CourseDB", b =>
                {
                    b.Navigation("Classs");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.ModuleclassDB", b =>
                {
                    b.Navigation("DetailModuleClasss");

                    b.Navigation("PracticeGroups");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.OlogyDB", b =>
                {
                    b.Navigation("Majors");

                    b.Navigation("PracticalLaboratorys");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PermissionDB", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticallaboratoryDB", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("Maintainances");

                    b.Navigation("PracticeSchedules");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticeScheduleDB", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.PracticeShiftDB", b =>
                {
                    b.Navigation("PracticeSchedules");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.SchoolYearDB", b =>
                {
                    b.Navigation("ModuleClasss");

                    b.Navigation("PracticeSchedules");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.SemesterDB", b =>
                {
                    b.Navigation("PracticeSchedules");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.StudentDB", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("DetailModuleClasss");

                    b.Navigation("DetailPracticeGroups");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.SubjectDB", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("PracticalLaboratorys");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.TeacherDB", b =>
                {
                    b.Navigation("ModuleClasss");

                    b.Navigation("PracticeGroups");

                    b.Navigation("PracticeSchedules");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.TechnicalStaffDB", b =>
                {
                    b.Navigation("Maintainances");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.majorsDB", b =>
                {
                    b.Navigation("Classs");
                });

            modelBuilder.Entity("DoAnTotNghiep.Data.practicegroupDB", b =>
                {
                    b.Navigation("DetailPracticeGroups");

                    b.Navigation("PracticeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
